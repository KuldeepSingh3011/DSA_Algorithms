Given a NxN matrix of positive integers. There are only three possible moves from a cell Matrix[r][c].
Possible Moves from Matrix[r][c] are:-
                Matrix [r+1] [c]
                Matrix [r+1] [c-1]
                Matrix [r+1] [c+1]

Starting from any column in row 0, return the largest sum of any of the paths up to row N-1.

Problem Link :- https://practice.geeksforgeeks.org/problems/path-in-matrix3805/1#

Solution:-
int maximumPath(int N, vector<vector<int>> Matrix)
    {
        int dp[2][N];
        for (int i = 0; i < N; i++) {
            dp[0][i] = INT_MAX;
            dp[1][i] = INT_MAX;
        }
        
        for (int i = 0; i < N; i++) {
            int row = i&1;
            for (int j = 0; j  < N; j++) {
                if(i == 0) 
                    dp[row][j] = Matrix[i][j];
                else {
                    int a = 0;
                    if((j - 1) >= 0)
                        a = max(a, dp[1 - row][j - 1]);
                    int b = 0;
                    if((j + 1) < N)
                        b = max(b, dp[1 - row][j + 1]);
                    dp[row][j] = max({a, b, dp[1 - row][j]}) + Matrix[i][j];
                }
            }
        }
        int ans = 0;
        for (int i = 0; i < N; i++) {
            ans = max(ans, dp[1 - (N&1)][i]);
        }
        return ans;
}

Time Complexity :- O(N*N)
Space Complexity :- O(N)
